{"version":3,"sources":["sections/Intro/smile.svg","sections/Intro/index.js","sections/AboutUs/company.svg","sections/AboutUs/index.js","sections/HowItWorks/data.svg","sections/HowItWorks/index.js","sections/NavBar/index.js","App.js","reportWebVitals.js","index.js"],"names":["Intro","params","className","src","smiling","AboutUs","id","company","HowItWorks","data","NavBar","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,G,UAAA,IAA0B,mC,qBC6B1BA,EAzBD,SAACC,GAQX,OACI,sBAAKC,UAAU,QAAf,UACI,sBAAKA,UAAU,gBAAf,UACA,oBAAIA,UAAU,aAAd,6BACA,yFAQA,qBAAKA,UAAU,YAAYC,IAAKC,QCxB7B,G,MAAA,IAA0B,qCCuB1BC,EApBC,SAACJ,GACb,OACI,sBAAKC,UAAU,QAAQI,GAAG,QAA1B,UACI,qBAAKJ,UAAU,YAAYC,IAAKI,IAChC,sBAAKL,UAAU,gBAAf,UACA,oBAAIA,UAAU,aAAd,8BACA,mBAAGA,UAAU,cAAb,sJAGA,mBAAGA,UAAU,QAAb,sDAGA,2NCfG,G,MAAA,IAA0B,kCCe1BM,EAZI,SAACP,GAChB,OACI,sBAAKC,UAAU,MAAMI,GAAG,OAAxB,UACI,sBAAKJ,UAAU,cAAf,UACA,oBAAIA,UAAU,WAAd,0BACA,4aAEA,qBAAKA,UAAU,UAAUC,IAAKM,QCE3BC,G,MAVA,SAACT,GACZ,OACI,gCACI,mBAAGC,UAAU,YAAYS,KAAK,SAA9B,sBACA,mBAAGT,UAAU,WAAWS,KAAK,QAA7B,sBACA,mBAAGT,UAAU,cAAcS,KAAK,WAAhC,8BCSGC,MAbf,WAGE,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46e8e7bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smile.5396192a.svg\";","import smiling from './smile.svg'\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport './Intro.css'\r\n\r\nconst Intro = (params) => {\r\n    const apikey = process.env.REACT_APP_FACEBOOK_APP_ID\r\n\r\n    const responseFacebook = (response) => {\r\n        let {picture} = response\r\n        console.log(response,picture);\r\n    }\r\n\r\n    return (\r\n        <div className=\"intro\">\r\n            <div className=\"intro-content\">\r\n            <h1 className=\"intro-name\">Joke Of The Day</h1>\r\n            <p>Using data driven science to create the perfect joke.</p>\r\n            {/* <FacebookLogin\r\n                appId={apikey}\r\n                autoLoad={true}\r\n                fields=\"name,email,picture\"\r\n                callback={responseFacebook} \r\n            /> */}\r\n            </div>\r\n            <img className=\"intro-img\" src={smiling} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","export default __webpack_public_path__ + \"static/media/company.32be3457.svg\";","import './AboutUs.css'\r\nimport company from './company.svg'\r\n\r\nconst AboutUs = (params) => {\r\n    return (\r\n        <div className=\"about\" id=\"about\">\r\n            <img className=\"about-img\" src={company} />\r\n            <div className=\"about-content\">\r\n            <h1 className=\"about-name\">What We're About</h1>\r\n            <p className=\"description\">\r\n                Here at JoTD, our team of experienced technicians have been working tirefully around the clock to solve one of life's biggest questions: \r\n            </p>\r\n            <p className=\"quote\">\r\n                Is it possible to tell the perfect joke?\r\n            </p>  \r\n            <p>\r\n                Through countless years of research we think we've come up with a solution. To us it's not about just telling the perfect joke, it's really about creating the ultimate experience.\r\n            </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUs","export default __webpack_public_path__ + \"static/media/data.6d4a296e.svg\";","import './HowItWorks.css'\r\nimport data from './data.svg'\r\n\r\nconst HowItWorks = (params) => {\r\n    return (\r\n        <div className=\"how\" id=\"work\">\r\n            <div className=\"how-content\">\r\n            <h1 className=\"how-name\">How It Works</h1>\r\n            <p>Humor is subjective, therefore everyone perceives jokes differently. In order to achieve a truly perfect joke, you'd need to create a joke that is tailor made to the individual. By combining cutting edge data science and state of the art machine learning algorithms we have created a joke matrix that is constantly evolving in order to give you the perfect joke, all at the click of a button!</p>\r\n            </div>\r\n            <img className=\"how-img\" src={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowItWorks","import './NavBar.css'\r\n\r\nconst NavBar = (params) => {\r\n    return (\r\n        <nav>\r\n            <a className=\"nav-about\" href=\"#about\">About Us</a>\r\n            <a className=\"nav-work\" href=\"#work\">The Work</a>\r\n            <a className=\"nav-started\" href=\"#started\">Get Started</a>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import './App.css';\r\nimport {Intro,AboutUs,HowItWorks,NavBar} from './sections'\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <Intro />\r\n      <AboutUs />\r\n      <HowItWorks />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}